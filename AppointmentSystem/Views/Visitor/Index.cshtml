@model IEnumerable<AppointmentSystem.Models.ViewModel.VisitorViewModel>

@{
    ViewData["Title"] = "Visitor List";
}

<h2>Visitors</h2>

<a href="@Url.Action("Create", "Visitor")" class="btn btn-primary">Add New Visitor</a>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Mobile Number</th>
            <th>Email</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var visitor in Model)
        {
            <tr>
                <td>@visitor.Name</td>
                <td>@visitor.MobileNumber</td>
                <td>@visitor.EmailAddress</td>
                <td>
                    <div class="form-check form-switch">
                        <input class="form-check-input toggle-status"
                               type="checkbox"
                               id="flexSwitchCheckChecked_@visitor.Id"
                               data-id="@visitor.Id"
                        @(visitor.Status ? "checked" : "")>
                        <label class="form-check-label" for="flexSwitchCheckChecked_@visitor.Id">
                            @(visitor.Status ? "Active" : "Inactive")
                        </label>
                    </div>
                </td>
                <td>
                    <a href="@Url.Action("Details", "Visitor", new { id = visitor.Id })" class="btn btn-info">Details</a>
                    <a href="@Url.Action("Edit", "Visitor", new { id = visitor.Id })" class="btn btn-warning">Edit</a>
                    <a href="@Url.Action("Delete", "Visitor", new { id = visitor.Id })" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            document.querySelectorAll('.toggle-status').forEach(element => {
                element.addEventListener('change', async function () {
                    const visitorId = this.dataset.id;
                    const newStatus = this.checked;

                    try {
                        const response = await fetch(`/Visitor/ToggleStatus/${visitorId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': token
                            },
                            body: JSON.stringify({ status: newStatus })
                        });

                        if (!response.ok) {
                            throw new Error('Error updating status');
                        }

                        const label = this.nextElementSibling;
                        label.textContent = newStatus ? 'Active' : 'Inactive';
                    } catch (error) {
                        alert('Failed to update status. Please try again.');
                        this.checked = !newStatus; // Revert the toggle
                    }
                });
            });
        });
    </script>
}
