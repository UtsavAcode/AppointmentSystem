@model IEnumerable<AppointmentSystem.Models.ViewModel.PostViewModel>
@{
    ViewData["Title"] = "Post List";
}
<h1>Posts</h1>
<a href="/Post/Create" class="btn btn-primary mb-3">Create New Post</a>
<table class="table table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Name</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var post in Model)
        {
            <tr>
                <td>@post.Name</td>
                <td>
                    <!-- Bootstrap form-switch to toggle status -->
                    <div class="form-check form-switch">
                        <input class="form-check-input status-toggle"
                               type="checkbox"
                               id="flexSwitchCheck@(post.Id)"
                               data-post-id="@post.Id"
                        @(post.Status ? "checked" : "")>
                        <label class="form-check-label" for="flexSwitchCheck@(post.Id)">
                            @(post.Status ? "Active" : "Inactive")
                        </label>
                    </div>
                </td>
                <td>

                    <a href="@Url.Action("Edit", "Post", new { id = post.Id })" class="btn btn-primary">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>

               $(document).ready(function() {
            $('.status-toggle').change(function() {
                var postId = $(this).data('post-id'); // Use data-post-id
                var isActive = $(this).is(':checked');
                var toggleElement = $(this);
                var label = $(`label[for="flexSwitchCheck${postId}"]`);
                $.ajax({
                    url: '/Post/ToggleStatus', // Update to the correct controller and action
                    type: 'POST',
                    data: {
                        id: postId,
                        status: isActive
                    },
                    success: function(response) {
                        label.text(isActive ? 'Active' : 'Inactive');
                    },
                    error: function(xhr) {
                        if (xhr.status === 400 && xhr.responseText.includes("Cannot deactivate")) {
                            // Handle deactivation error (e.g., display message, disable button)
                            toggleElement.prop('checked', !isActive); // Revert the toggle
                            label.text(!isActive ? 'Active' : 'Inactive');
                            alert("Cannot deactivate the post. There are active officers assigned to it.");
                        } else {
                            // Handle other errors
                            alert(xhr.responseText || 'Failed to update status');
                        }
                    }
                });
            });
        });
    </script>

}
