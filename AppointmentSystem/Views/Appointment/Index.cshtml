@using static AppointmentSystem.Models.Domain.Appointment
@model IEnumerable<AppointmentSystem.Models.ViewModel.AllAppointmentViewmodel>

@{
    ViewData["Title"] = "Appointments";
}

<h1>Appointments</h1>


<form method="get" class="mb-3">
    <div class="row">
        <div class="col-md-3">
            <input type="text" name="officerName" class="form-control" placeholder="Search by Officer" value="@ViewData["OfficerName"]" />
        </div>
        <div class="col-md-3">
            <input type="date" name="date" class="form-control" value="@ViewData["Date"]" />
        </div>
        <div class="col-md-2">
            <input type="time" name="startTime" class="form-control" value="@ViewData["StartTime"]" />
        </div>
        <div class="col-md-2">
            <input type="time" name="endTime" class="form-control" value="@ViewData["EndTime"]" />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>

<a href="@Url.Action("Create", "Appointment")" class="btn btn-primary mb-3">Add Appointment</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Officer</th>
            <th>Visitor</th>
            <th>Date</th>
            <th>Start Time</th>
            <th>End Time</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var appointment in Model)
            {
                <tr>
                    <td>@appointment.Name</td>
                    <td>@appointment.OfficerName</td>
                    <td>@appointment.VisitorName</td>
                    <td>@appointment.Date.ToShortDateString()</td>
                    <td>@appointment.StartTime</td>
                    <td>@appointment.EndTime</td>
                    <td>
                        <div class="form-check form-switch">
                            <input class="form-check-input toggle-status"
                                   type="checkbox"
                                   id="flexSwitchCheckChecked@(appointment.Id)"
                                   data-appointment-id="@appointment.Id"
                            @(appointment.Status == AppointmentStatus.Active ? "checked" : "")>
                            <label class="form-check-label" for="flexSwitchCheckChecked@(appointment.Id)">
                                @(appointment.Status == AppointmentStatus.Active ? "Active" : "Inactive")
                            </label>
                        </div>
                    </td>
                    <td>
                        @if (appointment.Status != AppointmentStatus.Cancelled)
                        {
                            <a href="@Url.Action("Edit", "Appointment", new { id = appointment.Id })" class="btn btn-sm btn-warning">Edit</a>
                            <a href="@Url.Action("Cancel", "Appointment", new { id = appointment.Id })" class="btn btn-sm btn-danger">Cancel</a>
                        }
                        else
                        {
                            <span class="text-muted">Cancelled</span>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8" class="text-center">No appointments found.</td>
            </tr>
        }
    </tbody>
</table>

<script>
       document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".toggle-status").forEach(function (toggleSwitch) {
            toggleSwitch.addEventListener("change", function () {
                const appointmentId = this.dataset.appointmentId;
                const isChecked = this.checked;

                fetch('@Url.Action("ToggleStatus", "Appointment")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: parseInt(appointmentId) })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const label = this.nextElementSibling;
                        label.textContent = isChecked ? 'Active' : 'Inactive';
                       
                    } else {
                       
                        this.checked = !isChecked; 
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    this.checked = !isChecked; 
                    alert('An error occurred while updating the status');
                });
            });
        });
    });
</script>
